import time
import picamera
from io import BytesIO
from PIL import Image
from pyLoRa import LoRa

def capture_image():
    stream = BytesIO()
    with picamera.PiCamera() as camera:
        camera.resolution = (640, 480)  # Resolução da imagem
        camera.capture(stream, format='jpeg')
    stream.seek(0)
    return Image.open(stream)

def compress_image(image, max_size_kb=9):
    quality = 85  # Começamos com uma qualidade média
    while True:
        stream = BytesIO()
        image.save(stream, format='JPEG', quality=quality)
        size_kb = len(stream.getvalue()) / 1024
        if size_kb <= max_size_kb:
            break
        quality -= 5  # Reduz a qualidade para diminuir o tamanho
        if quality <= 5:  # Limite de qualidade mínima
            break
    stream.seek(0)
    return stream.getvalue()

def send_lora_data(data):
    lora = LoRa(serial_port="/dev/ttyS0", address=1, frequency=433, tx_power=14, acks=True)
    lora.set_mode(MODE.STANDBY)
    lora.send(data)
    lora.set_mode(MODE.SLEEP)

def main_loop(interval=60):
    while True:
        image = capture_image()
        compressed_image = compress_image(image)
        send_lora_data(compressed_image)
        time.sleep(interval)

if __name__ == "__main__":
    main_loop(interval=60)  # Intervalo de 60 segundos
